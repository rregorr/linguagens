Aqui estão as implementações comuns para cada uma das interfaces de coleção em Java e suas principais diferenças:

List:

ArrayList: Baseado em um array redimensionável. Melhor para busca rápida e atualização. Menos eficiente em inserção e remoção em qualquer lugar, exceto no final da lista.
LinkedList: Lista duplamente encadeada. Melhor para inserção e remoção rápida. Menos eficiente em busca rápida.
Set:

HashSet: Baseado em uma tabela hash. Oferece busca, inserção e remoção rápidas. Não mantém a ordem dos elementos.
LinkedHashSet: Semelhante ao HashSet, mas mantém a ordem de inserção dos elementos.
TreeSet: Implementado como uma árvore balanceada. Mantém os elementos ordenados, mas é menos eficiente em inserções e remoções do que HashSet.
Queue:

LinkedList: Pode ser usada como uma fila e oferece operações de inserção, remoção e inspeção em ambas as extremidades.
PriorityQueue: Elementos ordenados de acordo com a ordem natural ou um Comparator. Não é projetada para inserção e remoção em posições arbitrárias.
Map:

HashMap: Baseado em tabela hash. Oferece inserção, remoção e busca rápidas. Não mantém a ordem dos elementos.
LinkedHashMap: Semelhante ao HashMap, mas mantém a ordem de inserção ou acesso.
TreeMap: Baseado em uma árvore vermelho-preta. Mantém as chaves ordenadas, mas é menos eficiente em operações de inserção e remoção do que HashMap.